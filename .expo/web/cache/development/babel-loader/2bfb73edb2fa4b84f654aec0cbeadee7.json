{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VietAnh\\\\Balogram\\\\screen\\\\LoginScreen.js\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport { theme } from \"../components/core/theme\";\nimport { Background, Title, TextInput, Button } from \"../components\";\nimport Toast from 'react-native-toast-message';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { auth } from \"../handle_api\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      phonenumber = _useState2[0],\n      setPhonenumber = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var onLoginPressed = function onLoginPressed() {\n    var data = {\n      phonenumber: phonenumber,\n      password: password\n    };\n    auth.login(data).then(function (res) {\n      var token = res.data.token;\n      dispatch({\n        type: 'STORE_TOKEN',\n        payload: token\n      });\n      Toast.show({\n        type: 'success',\n        text1: 'Đăng nhập thành công'\n      });\n      navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'MainScreen'\n        }]\n      });\n    }).catch(function (error) {\n      Toast.show({\n        type: 'error',\n        text1: 'Tài khoản hoặc mật khẩu không chính xác'\n      });\n      console.log(error);\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Toast, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"BaloGram\"), React.createElement(TextInput, {\n    label: \"S\\xF4\\u0301 \\u0111i\\xEA\\u0323n thoa\\u0323i\",\n    returnKeyType: \"next\",\n    value: phonenumber,\n    onChangeText: function onChangeText(text) {\n      return setPhonenumber(text);\n    },\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"M\\xE2\\u0323t kh\\xE2\\u0309u\",\n    returnKeyType: \"done\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ForgetPasswordScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Qu\\xEAn m\\xE2\\u0323t kh\\xE2\\u0309u?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed,\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"\\u0110\\u0103ng nh\\xE2\\u0323p\"), React.createElement(View, {\n    style: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Ng\\u01B0\\u01A1\\u0300i du\\u0300ng m\\u01A1\\u0301i? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('RegisterScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, \"\\u0110\\u0103ng ki\\u0301 ngay\"))), React.createElement(Toast, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.link\n  },\n  button: {\n    backgroundColor: theme.colors.button\n  }\n});","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/screen/LoginScreen.js"],"names":["React","useState","Text","theme","Background","Title","TextInput","Button","Toast","useSelector","useDispatch","auth","LoginScreen","navigation","phonenumber","setPhonenumber","password","setPassword","dispatch","onLoginPressed","data","login","then","res","token","type","payload","show","text1","reset","index","routes","name","catch","error","console","log","text","styles","forgotPassword","navigate","forgot","button","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","backgroundColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,KAAT;AACA,SACEC,UADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,MAJF;AAOA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT;AACA,eAAe,SAASC,WAAT,OAAqC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAClD,kBAAsCZ,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOa,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAgCd,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AACA,MAAMS,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,IAAI,GAAG;AACXN,MAAAA,WAAW,EAAEA,WADF;AAEXE,MAAAA,QAAQ,EAAEA;AAFC,KAAb;AAMAL,IAAAA,IAAI,CAACU,KAAL,CAAWD,IAAX,EACGE,IADH,CACQ,UAAAC,GAAG,EAAI;AAEX,UAAMC,KAAK,GAAGD,GAAG,CAACH,IAAJ,CAASI,KAAvB;AAEAN,MAAAA,QAAQ,CAAC;AAAEO,QAAAA,IAAI,EAAE,aAAR;AAAuBC,QAAAA,OAAO,EAAEF;AAAhC,OAAD,CAAR;AACAhB,MAAAA,KAAK,CAACmB,IAAN,CAAW;AACTF,QAAAA,IAAI,EAAE,SADG;AAETG,QAAAA,KAAK,EAAE;AAFE,OAAX;AAIAf,MAAAA,UAAU,CAACgB,KAAX,CAAiB;AACfC,QAAAA,KAAK,EAAE,CADQ;AAEfC,QAAAA,MAAM,EAAE,CAAC;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAD;AAFO,OAAjB;AAID,KAdH,EAeGC,KAfH,CAeS,UAAAC,KAAK,EAAI;AACd1B,MAAAA,KAAK,CAACmB,IAAN,CAAW;AACTF,QAAAA,IAAI,EAAE,OADG;AAETG,QAAAA,KAAK,EAAE;AAFE,OAAX;AAIAO,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAED,KAtBH;AAuBD,GA9BD;;AAgCA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,4CADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEpB,WAHT;AAIE,IAAA,YAAY,EAAE,sBAACuB,IAAD;AAAA,aAAUtB,cAAc,CAACsB,IAAD,CAAxB;AAAA,KAJhB;AAOE,IAAA,cAAc,EAAC,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAeE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAErB,QAHT;AAIE,IAAA,YAAY,EAAE,sBAACqB,IAAD;AAAA,aAAUpB,WAAW,CAACoB,IAAD,CAArB;AAAA,KAJhB;AAOE,IAAA,eAAe,MAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAwBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAM1B,UAAU,CAAC2B,QAAX,CAAoB,sBAApB,CAAN;AAAA,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAHF,CADF,CAxBF,EA+BE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,WAAb;AAAyB,IAAA,OAAO,EAAEtB,cAAlC;AAAkD,IAAA,KAAK,EAAEmB,MAAM,CAACI,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCA/BF,EAkCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAM9B,UAAU,CAAC2B,QAAX,CAAoB,gBAApB,CAAN;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CAFF,CAlCF,EAwCE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxCF,CADF;AA4CD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,cAAc,EAAE;AACdQ,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,UAAU,EAAE,UAFE;AAGdC,IAAAA,YAAY,EAAE;AAHA,GADe;AAM/BN,EAAAA,GAAG,EAAE;AACHO,IAAAA,aAAa,EAAE,KADZ;AAEHC,IAAAA,SAAS,EAAE;AAFR,GAN0B;AAU/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAElD,KAAK,CAACmD,MAAN,CAAaC;AAFd,GAVuB;AAc/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,UAAU,EAAE,MADR;AAEJH,IAAAA,KAAK,EAAElD,KAAK,CAACmD,MAAN,CAAaV;AAFhB,GAdyB;AAkB/BF,EAAAA,MAAM,EAAE;AACNe,IAAAA,eAAe,EAAEtD,KAAK,CAACmD,MAAN,CAAaZ;AADxB;AAlBuB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport { theme } from '../components/core/theme'\r\nimport {\r\n  Background,\r\n  Title,\r\n  TextInput,\r\n  Button,\r\n}\r\n  from '../components'\r\nimport Toast from 'react-native-toast-message';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { auth } from '../handle_api';\r\nexport default function LoginScreen({ navigation }) {\r\n  const [phonenumber, setPhonenumber] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const dispatch = useDispatch();\r\n  const onLoginPressed = () => {\r\n    const data = {\r\n      phonenumber: phonenumber,\r\n      password: password\r\n    }\r\n    // console.log(\"Test\")\r\n    // console.log(phonenumber)\r\n    auth.login(data)\r\n      .then(res => {\r\n        // console.log(res.data)\r\n        const token = res.data.token;\r\n        // call dispatch to store token\r\n        dispatch({ type: 'STORE_TOKEN', payload: token })\r\n        Toast.show({\r\n          type: 'success',\r\n          text1: 'Đăng nhập thành công'\r\n        });\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: 'MainScreen' }],\r\n        })\r\n      })\r\n      .catch(error => {\r\n        Toast.show({\r\n          type: 'error',\r\n          text1: 'Tài khoản hoặc mật khẩu không chính xác'\r\n        });\r\n        console.log(error)\r\n        // setPassword({ value: '', error: '' })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Background>\r\n      <Toast />\r\n      <Title>BaloGram</Title>\r\n      <TextInput\r\n        label=\"Số điện thoại\"\r\n        returnKeyType=\"next\"\r\n        value={phonenumber}\r\n        onChangeText={(text) => setPhonenumber(text)}\r\n        // error={!!phonenumber.error}\r\n        // errorText={phonenumber.error}\r\n        autoCapitalize=\"none\"\r\n      // autoCompleteType=\"phonenumber\"\r\n      // textContentType=\"phonenumber\"\r\n      // keyboardType=\"phonenumber\"\r\n      />\r\n      <TextInput\r\n        label=\"Mật khẩu\"\r\n        returnKeyType=\"done\"\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n        // error={!!password.error}\r\n        // errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <View style={styles.forgotPassword}>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('ForgetPasswordScreen')}\r\n        >\r\n          <Text style={styles.forgot}>Quên mật khẩu?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Button mode=\"contained\" onPress={onLoginPressed} style={styles.button}>\r\n        Đăng nhập\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Người dùng mới? </Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate('RegisterScreen')}>\r\n          <Text style={styles.link}>Đăng kí ngay</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Toast />\r\n    </Background>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  forgotPassword: {\r\n    width: '100%',\r\n    alignItems: 'flex-end',\r\n    marginBottom: 24,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    marginTop: 4,\r\n  },\r\n  forgot: {\r\n    fontSize: 13,\r\n    color: theme.colors.secondary,\r\n  },\r\n  link: {\r\n    fontWeight: 'bold',\r\n    color: theme.colors.link,\r\n  },\r\n  button: {\r\n    backgroundColor: theme.colors.button\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}