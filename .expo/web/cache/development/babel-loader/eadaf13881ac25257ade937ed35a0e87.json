{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VietAnh\\\\Balogram\\\\screen\\\\ChatMessengerScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback, useEffect, useLayoutEffect, useRef } from \"react\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Avatar, Icon } from \"react-native-elements\";\nimport { io } from \"socket.io-client\";\nimport { chat, message } from \"../handle_api\";\nvar SOCKET_URL = \"http://192.168.0.102:3000\";\nexport default function ChatMessengerScreen(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var socket = useRef();\n  var item = route.params.item;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      arrivalMessage = _useState4[0],\n      setArrivalMessage = _useState4[1];\n\n  var chatId = item.id;\n  var token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRydW5ndnVob2FuZyIsImlkIjoiNjE4ZTk3NTg3NDU1MGEyMmE0Y2IyYTkwIiwiaWF0IjoxNjM2NzM0ODA5fQ.NwBPkKkhl8IHr64k-4EwTPMhtzY2IM0J6TXqm8c-DNk\";\n  var receiverId = \"618e992874550a22a4cb2a98\";\n  var senderId = \"618e975874550a22a4cb2a90\";\n\n  var onBack = function onBack() {\n    navigation.navigate(\"MainScreen\");\n  };\n\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          style: styles.headerLeft,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }\n        }, React.createElement(Icon, {\n          name: \"chevron-left\",\n          size: 40,\n          onPress: onBack,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 11\n          }\n        }), React.createElement(Avatar, {\n          rounded: true,\n          source: item.avatar,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }));\n      },\n      headerTitle: item.name,\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }\n        }, React.createElement(Icon, {\n          name: \"menu\",\n          size: 40,\n          onPress: function onPress() {\n            return navigation.navigate(\"ChatInformation\", {\n              item: item\n            });\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 32\n          }\n        }));\n      }\n    });\n  }, [navigation]);\n  useEffect(function () {\n    var initialize = function initialize() {\n      var newMessages;\n      return _regeneratorRuntime.async(function initialize$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetchMessages());\n\n            case 2:\n              newMessages = _context.sent;\n              setMessages(newMessages.map(function (msg) {\n                return {\n                  _id: msg._id,\n                  text: msg.content,\n                  createdAt: msg.createdAt,\n                  user: {\n                    _id: msg.user._id,\n                    name: msg.user.username\n                  }\n                };\n              }).reverse());\n              socket.current = io(SOCKET_URL);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    initialize();\n  }, []);\n  useEffect(function () {\n    var _socket$current;\n\n    (_socket$current = socket.current) == null ? void 0 : _socket$current.on('getMessage', function (data) {\n      if (senderId === data.receivedId) {\n        var newMsg = {\n          _id: data._id,\n          text: data.content,\n          createdAt: data.createdAt,\n          user: {\n            _id: data.senderId\n          }\n        };\n        setMessages(function (previousMessages) {\n          return GiftedChat.append(previousMessages, [newMsg]);\n        });\n      }\n    });\n  }, [socket]);\n\n  var fetchMessages = function fetchMessages() {\n    var res;\n    return _regeneratorRuntime.async(function fetchMessages$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(message.getMessages(chatId, token));\n\n          case 3:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res.data.data);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var _onSend = useCallback(function _callee() {\n    var messages,\n        newMsgObj,\n        _socket$current2,\n        sendResult,\n        newMsg,\n        _args3 = arguments;\n\n    return _regeneratorRuntime.async(function _callee$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            messages = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : [];\n\n            if (!(messages.length > 0)) {\n              _context3.next = 15;\n              break;\n            }\n\n            newMsgObj = messages[0];\n            _context3.prev = 3;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(message.sendMessage(chatId, senderId, receiverId, newMsgObj.text, token));\n\n          case 6:\n            sendResult = _context3.sent;\n            newMsg = sendResult.data.data;\n            (_socket$current2 = socket.current) == null ? void 0 : _socket$current2.emit('sendMessage', {\n              _id: newMsg._id,\n              senderId: senderId,\n              receivedId: receiverId,\n              content: newMsgObj.text,\n              createdAt: newMsg.createdAt\n            });\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](3);\n            console.log(_context3.t0);\n\n          case 14:\n            setMessages(function (previousMessages) {\n              return GiftedChat.append(previousMessages, messages);\n            });\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[3, 11]], Promise);\n  }, []);\n\n  var onDelete = function onDelete(messageIdToDelete) {\n    var deleteMess;\n    return _regeneratorRuntime.async(function onDelete$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(message.deleteMessage(messageIdToDelete, token));\n\n          case 3:\n            deleteMess = _context4.sent;\n            setMessages(messages.filter(function (message) {\n              return message._id !== messageIdToDelete;\n            }));\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var onLongPress = function onLongPress(context, message) {\n    var options = ['Copy', 'Delete Message', 'Cancel'];\n    var cancelButtonIndex = options.length - 1;\n    context.actionSheet().showActionSheetWithOptions({\n      options: options,\n      cancelButtonIndex: cancelButtonIndex\n    }, function (buttonIndex) {\n      switch (buttonIndex) {\n        case 0:\n          Clipboard.setString(message.text);\n          break;\n\n        case 1:\n          onDelete(message._id);\n          break;\n      }\n    });\n  };\n\n  return React.createElement(GiftedChat, {\n    showAvatarForEveryMessage: true,\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: senderId\n    },\n    onLongPress: onLongPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  headerLeft: {\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/screen/ChatMessengerScreen.js"],"names":["React","useState","useCallback","useEffect","useLayoutEffect","useRef","GiftedChat","Avatar","Icon","io","chat","message","SOCKET_URL","ChatMessengerScreen","route","navigation","socket","item","params","messages","setMessages","arrivalMessage","setArrivalMessage","chatId","id","token","receiverId","senderId","onBack","navigate","setOptions","headerLeft","styles","avatar","headerTitle","name","headerRight","initialize","fetchMessages","newMessages","map","msg","_id","text","content","createdAt","user","username","reverse","current","on","data","receivedId","newMsg","previousMessages","append","getMessages","res","console","log","onSend","length","newMsgObj","sendMessage","sendResult","emit","onDelete","messageIdToDelete","deleteMessage","deleteMess","filter","onLongPress","context","options","cancelButtonIndex","actionSheet","showActionSheetWithOptions","buttonIndex","Clipboard","setString","StyleSheet","create","flexDirection"],"mappings":"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","sourcesContent":["import React, {useState,useCallback,useEffect,useLayoutEffect,useRef} from \"react\";\r\nimport { GiftedChat } from \"react-native-gifted-chat\";\r\nimport {View,StyleSheet} from \"react-native\";\r\nimport { Avatar, Icon } from \"react-native-elements\";\r\nimport { io } from \"socket.io-client\";\r\nimport { chat, message } from \"../handle_api\";\r\n\r\nconst SOCKET_URL =  \"http://192.168.0.102:3000\";\r\n\r\nexport default function ChatMessengerScreen({ route, navigation }) {\r\n  const socket = useRef();\r\n  const { item } = route.params;\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n\r\n  const chatId = item.id;\r\n  \r\n  const token =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRydW5ndnVob2FuZyIsImlkIjoiNjE4ZTk3NTg3NDU1MGEyMmE0Y2IyYTkwIiwiaWF0IjoxNjM2NzM0ODA5fQ.NwBPkKkhl8IHr64k-4EwTPMhtzY2IM0J6TXqm8c-DNk\";\r\n  const receiverId = \"618e992874550a22a4cb2a98\";\r\n  const senderId = \"618e975874550a22a4cb2a90\";\r\n  \r\n  const onBack = () => {\r\n    navigation.navigate(\"MainScreen\");\r\n  };\r\n  \r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerLeft: () => (\r\n        <View style={styles.headerLeft}>\r\n          <Icon name={\"chevron-left\"} size={40} onPress={onBack} />\r\n          <Avatar rounded source={item.avatar} />\r\n        </View>\r\n      ),\r\n      headerTitle: item.name,\r\n      headerRight: () => <View><Icon name={\"menu\"} size={40} onPress={() => navigation.navigate(\"ChatInformation\",{item})}  /></View>,\r\n    });\r\n  }, [navigation]);\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      const newMessages = await fetchMessages();\r\n      setMessages(\r\n        newMessages.map((msg) => ({\r\n            _id: msg._id,\r\n            text: msg.content,\r\n            createdAt: msg.createdAt,\r\n            user: {\r\n              _id: msg.user._id,\r\n              name: msg.user.username,\r\n            },\r\n          }))\r\n          .reverse()\r\n      );\r\n      socket.current = io(SOCKET_URL);\r\n    };\r\n    initialize();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.current?.on('getMessage', (data) => {\r\n      if (senderId === data.receivedId) {\r\n        const newMsg = {\r\n          _id: data._id,\r\n          text: data.content, \r\n          createdAt: data.createdAt,\r\n          user: {\r\n            _id: data.senderId,\r\n          },\r\n        };\r\n       \r\n        setMessages((previousMessages) => GiftedChat.append(previousMessages, [newMsg]));\r\n      } \r\n    });\r\n  }, [socket])\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const res = await message.getMessages(chatId, token);\r\n      return res.data.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const onSend = useCallback(async (messages = []) => {\r\n    if (messages.length > 0) {\r\n      const newMsgObj = messages[0];\r\n      try {\r\n        const sendResult = await message.sendMessage(\r\n          chatId,\r\n          senderId,\r\n          receiverId,\r\n          newMsgObj.text,\r\n          token\r\n        );\r\n        const newMsg = sendResult.data.data;\r\n        socket.current?.emit('sendMessage', {\r\n          _id: newMsg._id,\r\n          senderId: senderId,\r\n          receivedId: receiverId,\r\n          content: newMsgObj.text,\r\n          createdAt: newMsg.createdAt\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      setMessages((previousMessages) =>\r\n        GiftedChat.append(previousMessages, messages)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const onDelete = async (messageIdToDelete) => {\r\n    try {\r\n      const deleteMess = await message.deleteMessage(messageIdToDelete, token);\r\n      setMessages(messages.filter(message => message._id !== messageIdToDelete) )\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    // setMessages(messages.filter(message => message._id !== messageIdToDelete) )\r\n    }\r\n\r\n  const onLongPress = (context, message) => {\r\n    const options = ['Copy','Delete Message', 'Cancel'];\r\n    const cancelButtonIndex = options.length - 1;\r\n    context.actionSheet().showActionSheetWithOptions({\r\n        options,\r\n        cancelButtonIndex\r\n    }, (buttonIndex) => {\r\n        switch (buttonIndex) {\r\n            case 0:\r\n                Clipboard.setString(message.text);\r\n                break;\r\n            case 1:\r\n                onDelete(message._id) //pass the function here\r\n                break;\r\n        }\r\n    });\r\n}\r\n\r\n  return (\r\n      <GiftedChat\r\n        showAvatarForEveryMessage={true}\r\n        messages={messages}\r\n        onSend={(messages) => onSend(messages)}\r\n        user={{\r\n          _id: senderId,\r\n        }}\r\n        onLongPress = {onLongPress}\r\n      />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  headerLeft: {\r\n    flexDirection: \"row\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}