{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\VietAnh\\\\Balogram\\\\node_modules\\\\react-native-toast-message\\\\lib\\\\src\\\\components\\\\BaseToast.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { getTestId } from \"../utils/test-id\";\nimport { styles } from \"./BaseToast.styles\";\nimport { Touchable } from \"./Touchable\";\nexport function BaseToast(_ref) {\n  var text1 = _ref.text1,\n      text2 = _ref.text2,\n      onPress = _ref.onPress,\n      activeOpacity = _ref.activeOpacity,\n      style = _ref.style,\n      touchableContainerProps = _ref.touchableContainerProps,\n      contentContainerStyle = _ref.contentContainerStyle,\n      contentContainerProps = _ref.contentContainerProps,\n      text1Style = _ref.text1Style,\n      _ref$text1NumberOfLin = _ref.text1NumberOfLines,\n      text1NumberOfLines = _ref$text1NumberOfLin === void 0 ? 1 : _ref$text1NumberOfLin,\n      text1Props = _ref.text1Props,\n      text2Style = _ref.text2Style,\n      _ref$text2NumberOfLin = _ref.text2NumberOfLines,\n      text2NumberOfLines = _ref$text2NumberOfLin === void 0 ? 1 : _ref$text2NumberOfLin,\n      text2Props = _ref.text2Props,\n      renderLeadingIcon = _ref.renderLeadingIcon,\n      renderTrailingIcon = _ref.renderTrailingIcon;\n  return React.createElement(Touchable, _extends({\n    testID: getTestId('TouchableContainer'),\n    onPress: onPress,\n    activeOpacity: activeOpacity,\n    style: [styles.base, styles.leadingBorder, style]\n  }, touchableContainerProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }), renderLeadingIcon && renderLeadingIcon(), React.createElement(View, _extends({\n    testID: getTestId('ContentContainer'),\n    style: [styles.contentContainer, contentContainerStyle]\n  }, contentContainerProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }), text1 && text1.length > 0 && React.createElement(Text, _extends({\n    testID: getTestId('Text1'),\n    style: [styles.text1, text1Style],\n    numberOfLines: text1NumberOfLines,\n    ellipsizeMode: \"tail\"\n  }, text1Props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 40\n    }\n  }), text1), text2 && (text2 == null ? void 0 : text2.length) > 0 && React.createElement(Text, _extends({\n    testID: getTestId('Text2'),\n    style: [styles.text2, text2Style],\n    numberOfLines: text2NumberOfLines,\n    ellipsizeMode: \"tail\"\n  }, text2Props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 41\n    }\n  }), text2)), renderTrailingIcon && renderTrailingIcon());\n}","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/node_modules/react-native-toast-message/lib/src/components/BaseToast.js"],"names":["React","getTestId","styles","Touchable","BaseToast","text1","text2","onPress","activeOpacity","style","touchableContainerProps","contentContainerStyle","contentContainerProps","text1Style","text1NumberOfLines","text1Props","text2Style","text2NumberOfLines","text2Props","renderLeadingIcon","renderTrailingIcon","base","leadingBorder","contentContainer","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,SAAT;AACA,SAASC,MAAT;AACA,SAASC,SAAT;AACA,OAAO,SAASC,SAAT,OAAkR;AAAA,MAA7PC,KAA6P,QAA7PA,KAA6P;AAAA,MAAtPC,KAAsP,QAAtPA,KAAsP;AAAA,MAA/OC,OAA+O,QAA/OA,OAA+O;AAAA,MAAtOC,aAAsO,QAAtOA,aAAsO;AAAA,MAAvNC,KAAuN,QAAvNA,KAAuN;AAAA,MAAhNC,uBAAgN,QAAhNA,uBAAgN;AAAA,MAAvLC,qBAAuL,QAAvLA,qBAAuL;AAAA,MAAhKC,qBAAgK,QAAhKA,qBAAgK;AAAA,MAAzIC,UAAyI,QAAzIA,UAAyI;AAAA,mCAA7HC,kBAA6H;AAAA,MAA7HA,kBAA6H,sCAAxG,CAAwG;AAAA,MAArGC,UAAqG,QAArGA,UAAqG;AAAA,MAAzFC,UAAyF,QAAzFA,UAAyF;AAAA,mCAA7EC,kBAA6E;AAAA,MAA7EA,kBAA6E,sCAAxD,CAAwD;AAAA,MAArDC,UAAqD,QAArDA,UAAqD;AAAA,MAAzCC,iBAAyC,QAAzCA,iBAAyC;AAAA,MAAtBC,kBAAsB,QAAtBA,kBAAsB;AACrR,SAAQ,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEnB,SAAS,CAAC,oBAAD,CAA5B;AAAoD,IAAA,OAAO,EAAEM,OAA7D;AAAsE,IAAA,aAAa,EAAEC,aAArF;AAAoG,IAAA,KAAK,EAAE,CAACN,MAAM,CAACmB,IAAR,EAAcnB,MAAM,CAACoB,aAArB,EAAoCb,KAApC;AAA3G,KAA2JC,uBAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACLS,iBAAiB,IAAIA,iBAAiB,EADjC,EAEN,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAElB,SAAS,CAAC,kBAAD,CAAvB;AAA6C,IAAA,KAAK,EAAE,CAACC,MAAM,CAACqB,gBAAR,EAA0BZ,qBAA1B;AAApD,KAA0GC,qBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGP,KAAK,IAAIA,KAAK,CAACmB,MAAN,GAAe,CAAxB,IAA8B,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEvB,SAAS,CAAC,OAAD,CAAvB;AAAkC,IAAA,KAAK,EAAE,CAACC,MAAM,CAACG,KAAR,EAAeQ,UAAf,CAAzC;AAAqE,IAAA,aAAa,EAAEC,kBAApF;AAAwG,IAAA,aAAa,EAAC;AAAtH,KAAiIC,UAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAC1BV,KAD0B,CADjC,EAIGC,KAAK,IAAI,CAAAA,KAAK,QAAL,YAAAA,KAAK,CAAEkB,MAAP,IAAgB,CAAzB,IAA+B,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEvB,SAAS,CAAC,OAAD,CAAvB;AAAkC,IAAA,KAAK,EAAE,CAACC,MAAM,CAACI,KAAR,EAAeU,UAAf,CAAzC;AAAqE,IAAA,aAAa,EAAEC,kBAApF;AAAwG,IAAA,aAAa,EAAC;AAAtH,KAAiIC,UAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAC3BZ,KAD2B,CAJlC,CAFM,EAULc,kBAAkB,IAAIA,kBAAkB,EAVnC,CAAR;AAYH","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\nimport { getTestId } from '../utils/test-id';\nimport { styles } from './BaseToast.styles';\nimport { Touchable } from './Touchable';\nexport function BaseToast({ text1, text2, onPress, activeOpacity, style, touchableContainerProps, contentContainerStyle, contentContainerProps, text1Style, text1NumberOfLines = 1, text1Props, text2Style, text2NumberOfLines = 1, text2Props, renderLeadingIcon, renderTrailingIcon }) {\n    return (<Touchable testID={getTestId('TouchableContainer')} onPress={onPress} activeOpacity={activeOpacity} style={[styles.base, styles.leadingBorder, style]} {...touchableContainerProps}>\n      {renderLeadingIcon && renderLeadingIcon()}\n      <View testID={getTestId('ContentContainer')} style={[styles.contentContainer, contentContainerStyle]} {...contentContainerProps}>\n        {text1 && text1.length > 0 && (<Text testID={getTestId('Text1')} style={[styles.text1, text1Style]} numberOfLines={text1NumberOfLines} ellipsizeMode='tail' {...text1Props}>\n            {text1}\n          </Text>)}\n        {text2 && text2?.length > 0 && (<Text testID={getTestId('Text2')} style={[styles.text2, text2Style]} numberOfLines={text2NumberOfLines} ellipsizeMode='tail' {...text2Props}>\n            {text2}\n          </Text>)}\n      </View>\n      {renderTrailingIcon && renderTrailingIcon()}\n    </Touchable>);\n}\n"]},"metadata":{},"sourceType":"module"}