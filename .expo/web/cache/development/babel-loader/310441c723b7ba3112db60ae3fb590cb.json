{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"./api\";\n\nvar login = function login(data) {\n  var loginInfo;\n  return _regeneratorRuntime.async(function login$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: '/users/login',\n            data: {\n              \"phonenumber\": data.phonenumber,\n              \"password\": data.password\n            }\n          }));\n\n        case 2:\n          loginInfo = _context.sent;\n          return _context.abrupt(\"return\", loginInfo);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar register = function register(data) {\n  var registerInfo;\n  return _regeneratorRuntime.async(function register$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: '/users/register',\n            data: {\n              \"phonenumber\": data.phonenumber,\n              \"username\": data.username,\n              \"password\": data.password\n            }\n          }));\n\n        case 2:\n          registerInfo = _context2.sent;\n          return _context2.abrupt(\"return\", registerInfo);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { login, register };","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/handle_api/auth.js"],"names":["api","login","data","method","url","phonenumber","password","loginInfo","register","username","registerInfo"],"mappings":";AAAA,OAAOA,GAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACcF,GAAG,CAAC;AACxBG,YAAAA,MAAM,EAAE,MADgB;AAExBC,YAAAA,GAAG,EAAE,cAFmB;AAGxBF,YAAAA,IAAI,EAAE;AAAE,6BAAeA,IAAI,CAACG,WAAtB;AACE,0BAAYH,IAAI,CAACI;AADnB;AAHkB,WAAD,CADjB;;AAAA;AACJC,UAAAA,SADI;AAAA,2CAOHA,SAPG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAUA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAON,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACcF,GAAG,CAAC;AAC3BG,YAAAA,MAAM,EAAE,MADmB;AAE3BC,YAAAA,GAAG,EAAE,iBAFsB;AAI3BF,YAAAA,IAAI,EAAE;AACF,6BAAeA,IAAI,CAACG,WADlB;AAEF,0BAAYH,IAAI,CAACO,QAFf;AAGF,0BAAYP,IAAI,CAACI;AAHf;AAJqB,WAAD,CADjB;;AAAA;AACPI,UAAAA,YADO;AAAA,4CAWNA,YAXM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AAcA,SAAST,KAAT,EAAgBO,QAAhB","sourcesContent":["import api from './api';\r\n\r\nconst login = async (data) => {\r\n    const loginInfo = await api({\r\n        method: 'POST',\r\n        url: '/users/login',\r\n        data: { \"phonenumber\": data.phonenumber,\r\n                \"password\": data.password },\r\n    });\r\n    return loginInfo;\r\n};\r\n\r\nconst register = async (data) => {\r\n    const registerInfo = await api({\r\n        method: 'POST',\r\n        url: '/users/register',\r\n        // data: { phonenumber, username, password }\r\n        data: {\r\n            \"phonenumber\": data.phonenumber,\r\n            \"username\": data.username,\r\n            \"password\": data.password\r\n        }\r\n    });\r\n    return registerInfo\r\n}\r\n\r\nexport { login, register };\r\n\r\n"]},"metadata":{},"sourceType":"module"}