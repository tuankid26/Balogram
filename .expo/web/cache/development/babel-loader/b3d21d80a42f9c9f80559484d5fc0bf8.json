{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"./api\";\n\nvar getListFriend = function getListFriend(token) {\n  var url, listFriend;\n  return _regeneratorRuntime.async(function getListFriend$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          url = '/friends/list';\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: url,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 3:\n          listFriend = _context.sent;\n          return _context.abrupt(\"return\", listFriend);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar setRequestFriend = function setRequestFriend(data) {\n  var token, user_id, setRequest;\n  return _regeneratorRuntime.async(function setRequestFriend$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          token = data.token;\n          user_id = data.user_id;\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: '/friends/set-request-friend',\n            data: {\n              \"user_id\": user_id\n            },\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 4:\n          setRequest = _context2.sent;\n          return _context2.abrupt(\"return\", setRequest);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getRequestFriend = function getRequestFriend(token) {\n  var url, getRequest;\n  return _regeneratorRuntime.async(function getRequestFriend$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          url = '/friends/get-requested-friend';\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: url,\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 3:\n          getRequest = _context3.sent;\n          return _context3.abrupt(\"return\", getRequest);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar setAcceptFriend = function setAcceptFriend(data) {\n  var token, user_id, is_accept, setAccept;\n  return _regeneratorRuntime.async(function setAcceptFriend$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          token = data.token;\n          user_id = data.user_id;\n          is_accept = data.is_accept;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: '/friends/set-accept',\n            data: {\n              \"user_id\": user_id,\n              \"is_accept\": is_accept\n            },\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          setAccept = _context4.sent;\n          return _context4.abrupt(\"return\", setAccept);\n\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar setRemoveFriend = function setRemoveFriend(data) {\n  var token, user_id, setRemove;\n  return _regeneratorRuntime.async(function setRemoveFriend$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          token = data.token;\n          user_id = data.user_id;\n          _context5.next = 4;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: '/friends/set-remove',\n            data: {\n              \"user_id\": user_id\n            },\n            headers: {\n              Authorization: \"Bearer \" + token\n            }\n          }));\n\n        case 4:\n          setRemove = _context5.sent;\n          return _context5.abrupt(\"return\", setRemove);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { setAcceptFriend, setRemoveFriend, setRequestFriend, getListFriend, getRequestFriend };","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/handle_api/friends.js"],"names":["api","getListFriend","token","url","method","headers","Authorization","listFriend","setRequestFriend","data","user_id","setRequest","getRequestFriend","getRequest","setAcceptFriend","is_accept","setAccept","setRemoveFriend","setRemove"],"mappings":"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","sourcesContent":["import api from './api';\r\n// import * as FileSystem from 'expo-file-system';\r\n// import { Asset } from 'expo-asset';\r\n\r\n// const addPost = async(postData, token) => {\r\n//     const createResult = await api({\r\n//         method: 'POST',\r\n//         url: '/posts/create',\r\n//         data: postData,\r\n//         headers: { Authorization: `Bearer ${token}` }\r\n//     });\r\n//     return createResult;\r\n// }\r\n\r\nconst getListFriend = async(token) => {\r\n    const url = '/friends/list';\r\n    const listFriend = await api({\r\n        method: 'POST',\r\n        url: url,\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return listFriend;\r\n}\r\n\r\nconst setRequestFriend = async(data) => {\r\n    const token = data.token;\r\n    const user_id = data.user_id;\r\n    const setRequest = await api({\r\n        method: 'POST',\r\n        url: '/friends/set-request-friend',\r\n        data: {\r\n            \"user_id\": user_id,\r\n        },\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return setRequest;\r\n}\r\n\r\nconst getRequestFriend = async(token) => {\r\n    const url = '/friends/get-requested-friend';\r\n    const getRequest = await api({\r\n        method: 'POST',\r\n        url: url,\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return getRequest;\r\n}\r\n\r\nconst setAcceptFriend = async(data) => {\r\n    const token = data.token;\r\n    const user_id = data.user_id;\r\n    const is_accept = data.is_accept;\r\n    const setAccept = await api({\r\n        method: 'POST',\r\n        url: '/friends/set-accept',\r\n        data: {\r\n            \"user_id\": user_id,\r\n            \"is_accept\": is_accept,\r\n\r\n        },\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return setAccept;\r\n\r\n}\r\n\r\nconst setRemoveFriend = async(data) => {\r\n    const token = data.token;\r\n    const user_id = data.user_id;\r\n    const setRemove = await api({\r\n        method: 'POST',\r\n        url: '/friends/set-remove',\r\n        data: {\r\n            \"user_id\": user_id,\r\n        },\r\n        headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return setRemove;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {setAcceptFriend, setRemoveFriend, setRequestFriend, getListFriend,getRequestFriend};"]},"metadata":{},"sourceType":"module"}