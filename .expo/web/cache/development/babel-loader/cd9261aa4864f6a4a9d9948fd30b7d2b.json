{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"./api\";\n\nvar getMessages = function getMessages(chatId, token) {\n  var getResult;\n  return _regeneratorRuntime.async(function getMessages$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(api({\n            method: 'GET',\n            url: \"/chats/getMessages/\" + chatId,\n            headers: {\n              'Authorization': \"Bearer \" + token\n            }\n          }));\n\n        case 2:\n          getResult = _context.sent;\n          return _context.abrupt(\"return\", getResult);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar sendMessage = function sendMessage(chatId, senderId, receiverId, msg, token) {\n  var newMessage, sendResult;\n  return _regeneratorRuntime.async(function sendMessage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          newMessage = {\n            receivedId: receiverId,\n            chatId: chatId,\n            member: [{\n              _id: senderId\n            }, {\n              _id: receiverId\n            }],\n            content: msg,\n            type: \"PRIVATE_CHAT\"\n          };\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(api({\n            method: 'POST',\n            url: '/chats/send/',\n            data: newMessage,\n            headers: {\n              'Authorization': \"Bearer \" + token\n            }\n          }));\n\n        case 3:\n          sendResult = _context2.sent;\n          return _context2.abrupt(\"return\", sendResult);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar deleteMessage = function deleteMessage(messageId, token) {\n  var getResult;\n  return _regeneratorRuntime.async(function deleteMessage$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(api({\n            method: 'GET',\n            url: \"/chats/deleteMess/\" + messageId,\n            headers: {\n              'Authorization': \"Bearer \" + token\n            }\n          }));\n\n        case 2:\n          getResult = _context3.sent;\n          return _context3.abrupt(\"return\", getResult);\n\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { getMessages, sendMessage, deleteMessage };","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/handle_api/message.js"],"names":["api","getMessages","chatId","token","method","url","headers","getResult","sendMessage","senderId","receiverId","msg","newMessage","receivedId","member","_id","content","type","data","sendResult","deleteMessage","messageId"],"mappings":";AACA,OAAOA,GAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,MAAP,EAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACQH,GAAG,CAAC;AACxBI,YAAAA,MAAM,EAAE,KADgB;AAExBC,YAAAA,GAAG,0BAAwBH,MAFH;AAGxBI,YAAAA,OAAO,EAAE;AACL,2CAA2BH;AADtB;AAHe,WAAD,CADX;;AAAA;AACVI,UAAAA,SADU;AAAA,2CAQTA,SARS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAON,MAAP,EAAeO,QAAf,EAAyBC,UAAzB,EAAqCC,GAArC,EAA0CR,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AACVS,UAAAA,UADU,GACG;AACfC,YAAAA,UAAU,EAAEH,UADG;AAEfR,YAAAA,MAAM,EAAEA,MAFO;AAGfY,YAAAA,MAAM,EAAE,CACJ;AAAEC,cAAAA,GAAG,EAAEN;AAAP,aADI,EAEJ;AAAEM,cAAAA,GAAG,EAAEL;AAAP,aAFI,CAHO;AAOfM,YAAAA,OAAO,EAAEL,GAPM;AAQfM,YAAAA,IAAI,EAAE;AARS,WADH;AAAA;AAAA,2CAaSjB,GAAG,CAAC;AACzBI,YAAAA,MAAM,EAAE,MADiB;AAEzBC,YAAAA,GAAG,EAAE,cAFoB;AAGzBa,YAAAA,IAAI,EAAEN,UAHmB;AAIzBN,YAAAA,OAAO,EAAE;AACL,2CAA2BH;AADtB;AAJgB,WAAD,CAbZ;;AAAA;AAaVgB,UAAAA,UAbU;AAAA,4CAsBTA,UAtBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAyBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,SAAP,EAAkBlB,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACMH,GAAG,CAAC;AACxBI,YAAAA,MAAM,EAAE,KADgB;AAExBC,YAAAA,GAAG,yBAAuBgB,SAFF;AAGxBf,YAAAA,OAAO,EAAE;AACL,2CAA2BH;AADtB;AAHe,WAAD,CADT;;AAAA;AACZI,UAAAA,SADY;AAAA,4CAQXA,SARW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAWA,SAASN,WAAT,EAAsBO,WAAtB,EAAmCY,aAAnC","sourcesContent":["\r\nimport api from './api';\r\n\r\nconst getMessages = async (chatId, token) => {\r\n    const getResult = await api({\r\n        method: 'GET',\r\n        url: `/chats/getMessages/${chatId}`,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n    return getResult;\r\n}\r\n\r\nconst sendMessage = async (chatId, senderId, receiverId, msg, token) => {\r\n    const newMessage = {\r\n        receivedId: receiverId,\r\n        chatId: chatId,\r\n        member: [\r\n            { _id: senderId },\r\n            { _id: receiverId }\r\n        ],\r\n        content: msg,\r\n        type: \"PRIVATE_CHAT\"\r\n    };\r\n\r\n\r\n    const sendResult = await api({\r\n        method: 'POST',\r\n        url: '/chats/send/',\r\n        data: newMessage,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n\r\n    return sendResult;\r\n}\r\n\r\nconst deleteMessage = async (messageId, token) => {\r\n    const getResult = await api({\r\n        method: 'GET',\r\n        url: `/chats/deleteMess/${messageId}`,\r\n        headers: {\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n    });\r\n    return getResult;\r\n}\r\n\r\nexport { getMessages, sendMessage, deleteMessage };"]},"metadata":{},"sourceType":"module"}