{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as MediaLibrary from 'expo-media-library';\nimport * as Permissions from 'expo-permissions';\nimport * as ImagePicker from 'expo-image-picker';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImageManipulator from 'expo-image-manipulator';\n\nvar getAlbumList = function getAlbumList() {\n  var albums;\n  return _regeneratorRuntime.async(function getAlbumList$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(MediaLibrary.getAlbumsAsync());\n\n        case 2:\n          albums = _context.sent;\n          return _context.abrupt(\"return\", albums);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getAlbum = function getAlbum(albumName) {\n  var permission, _await$MediaLibrary$r, granted, album;\n\n  return _regeneratorRuntime.async(function getAlbum$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(askMediaLibraryPermission());\n\n        case 2:\n          permission = _context2.sent;\n\n          if (permission) {\n            _context2.next = 8;\n            break;\n          }\n\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(MediaLibrary.requestPermissionsAsync());\n\n        case 6:\n          _await$MediaLibrary$r = _context2.sent;\n          granted = _await$MediaLibrary$r.granted;\n\n        case 8:\n          _context2.next = 10;\n          return _regeneratorRuntime.awrap(MediaLibrary.getAlbumAsync(albumName));\n\n        case 10:\n          album = _context2.sent;\n          return _context2.abrupt(\"return\", album);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar getAssetsInAlbum = function getAssetsInAlbum(album) {\n  var options, assets;\n  return _regeneratorRuntime.async(function getAssetsInAlbum$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          options = {\n            first: album.assetCount,\n            album: album,\n            sortBy: ['creationTime'],\n            mediaType: ['photo', 'video']\n          };\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(MediaLibrary.getAssetsAsync(options));\n\n        case 3:\n          assets = _context3.sent;\n          return _context3.abrupt(\"return\", assets);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar launchCamera = function launchCamera() {\n  var isCameraEnabled, _await$ImagePicker$re, granted, result;\n\n  return _regeneratorRuntime.async(function launchCamera$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n        case 2:\n          isCameraEnabled = _context4.sent;\n\n          if (isCameraEnabled.granted) {\n            _context4.next = 10;\n            break;\n          }\n\n          _context4.next = 6;\n          return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n        case 6:\n          _await$ImagePicker$re = _context4.sent;\n          granted = _await$ImagePicker$re.granted;\n\n          if (granted) {\n            _context4.next = 10;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", false);\n\n        case 10:\n          _context4.next = 12;\n          return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 5],\n            videoMaxDuration: 120,\n            quality: 0.5,\n            base64: true\n          }));\n\n        case 12:\n          result = _context4.sent;\n          return _context4.abrupt(\"return\", result);\n\n        case 14:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar askMediaLibraryPermission = function askMediaLibraryPermission() {\n  var permission, _await$MediaLibrary$r2, granted;\n\n  return _regeneratorRuntime.async(function askMediaLibraryPermission$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(MediaLibrary.getPermissionsAsync());\n\n        case 2:\n          permission = _context5.sent;\n\n          if (!permission.granted) {\n            _context5.next = 5;\n            break;\n          }\n\n          return _context5.abrupt(\"return\", true);\n\n        case 5:\n          _context5.next = 7;\n          return _regeneratorRuntime.awrap(MediaLibrary.requestPermissionsAsync());\n\n        case 7:\n          _await$MediaLibrary$r2 = _context5.sent;\n          granted = _await$MediaLibrary$r2.granted;\n          return _context5.abrupt(\"return\", granted);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar resizeImage = function resizeImage(image) {\n  var manipResult;\n  return _regeneratorRuntime.async(function resizeImage$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.uri, [{\n            resize: {\n              width: 480\n            }\n          }], {\n            compress: 0.7,\n            format: ImageManipulator.SaveFormat.JPEG\n          }));\n\n        case 2:\n          manipResult = _context6.sent;\n          return _context6.abrupt(\"return\", manipResult);\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { askMediaLibraryPermission, getAlbumList, getAlbum, getAssetsInAlbum, launchCamera, resizeImage };","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/helpers/Image.js"],"names":["MediaLibrary","Permissions","ImagePicker","ImageManipulator","getAlbumList","getAlbumsAsync","albums","getAlbum","albumName","askMediaLibraryPermission","permission","requestPermissionsAsync","granted","getAlbumAsync","album","getAssetsInAlbum","options","first","assetCount","sortBy","mediaType","getAssetsAsync","assets","launchCamera","getCameraPermissionsAsync","isCameraEnabled","requestCameraPermissionsAsync","launchCameraAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","videoMaxDuration","quality","base64","result","getPermissionsAsync","resizeImage","image","manipulateAsync","uri","resize","width","compress","format","SaveFormat","JPEG","manipResult"],"mappings":"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","sourcesContent":["import * as MediaLibrary from 'expo-media-library';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport {Image} from 'react-native';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\n\r\n/**\r\n * Queries for user-created albums in media gallery\r\n * \r\n * @returns array of user created albums\r\n */\r\nconst getAlbumList = async () => {\r\n    const albums = await MediaLibrary.getAlbumsAsync();\r\n    return albums;\r\n}\r\n\r\n/**\r\n * Queries for an album with a specific name.\r\n * \r\n * @param {string} albumName name of the album to look for\r\n * @returns an object representing an Album if exists, otherwise return null\r\n */\r\nconst getAlbum = async (albumName) => {\r\n    const permission = await askMediaLibraryPermission();\r\n    if (!permission){\r\n        const { granted } = await MediaLibrary.requestPermissionsAsync();\r\n    }\r\n    const album = await MediaLibrary.getAlbumAsync(albumName);\r\n\r\n    return album;\r\n}\r\n\r\n/**\r\n * Fetches all assets matching the provided criteria.\r\n * \r\n * @param {AlbumRef} album Album or its ID to get assets from specific album\r\n * @returns {import('expo-media-library').PagedInfo} object with array of Assets\r\n */\r\nconst getAssetsInAlbum = async (album) => {\r\n    const options = {\r\n        first: album.assetCount,\r\n        album: album,\r\n        sortBy: ['creationTime'],\r\n        mediaType: ['photo', 'video']\r\n    };\r\n\r\n    const assets = await MediaLibrary.getAssetsAsync(options);\r\n    return assets;\r\n}\r\n\r\nconst launchCamera = async () => {\r\n    const isCameraEnabled = await ImagePicker.getCameraPermissionsAsync();\r\n\r\n    if (!isCameraEnabled.granted) {\r\n        const { granted } = await ImagePicker.requestCameraPermissionsAsync();\r\n        if (!granted) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const result = await ImagePicker.launchCameraAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All, \r\n        allowsEditing: true,\r\n        aspect: [4, 5],\r\n        videoMaxDuration: 120,\r\n        quality: 0.5,\r\n        base64: true\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nconst askMediaLibraryPermission = async () => {\r\n    const permission = await MediaLibrary.getPermissionsAsync();\r\n    \r\n    if (permission.granted) {\r\n        return true;\r\n    }\r\n    const { granted } = await MediaLibrary.requestPermissionsAsync();\r\n    \r\n    return granted;\r\n}\r\nconst resizeImage = async (image) => {\r\n    // console.log(image);\r\n    const manipResult = await ImageManipulator.manipulateAsync(\r\n        image.uri,\r\n      [{ resize: { width: 480} }],\r\n      { compress: 0.7, format: ImageManipulator.SaveFormat.JPEG }\r\n    ); \r\n    return manipResult;\r\n}\r\nexport  { askMediaLibraryPermission, getAlbumList, getAlbum, getAssetsInAlbum, launchCamera, resizeImage };"]},"metadata":{},"sourceType":"module"}