{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\VietAnh\\\\Balogram\\\\screen\\\\EditPostScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Text } from 'react-native-paper';\nimport { theme } from \"../components/core/theme\";\nimport { Icon } from 'react-native-elements';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { mediaActions } from \"../redux/actions\";\nimport * as FileSystem from 'expo-file-system';\nimport { BackButton, TextInput } from \"../components\";\nimport { post } from \"../handle_api\";\nimport { token } from \"../handle_api/token\";\nexport default function EditPostScreen(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  var toggleItem = route.params.toggleItem;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    for (var index = 0; index < toggleItem.images.length; index++) {\n      var images = {};\n      images.uri = \"data:image/jpeg;base64,\" + toggleItem.images[index].base64;\n      images.id = toggleItem.images[index]._id;\n      dispatch(mediaActions.addAsset(images));\n    }\n\n    console.log(\"Done\");\n  }, []);\n  var selectedAssets = useSelector(function (state) {\n    return state.media.selectedAssets;\n  });\n\n  var editUpLoad = function editUpLoad() {\n    var imageAssets, videoAssets, convertedImageAssets, convertedVideoAssets, data;\n    return _regeneratorRuntime.async(function editUpLoad$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            imageAssets = selectedAssets.filter(function (asset) {\n              return asset.mediaType === 'photo';\n            });\n            videoAssets = selectedAssets.filter(function (asset) {\n              return asset.mediaType === 'video';\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(convertToBase64(imageAssets));\n\n          case 4:\n            convertedImageAssets = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(convertToBase64(videoAssets));\n\n          case 7:\n            convertedVideoAssets = _context.sent;\n            data = {\n              token: token,\n              postId: toggleItem._id,\n              described: status,\n              images: convertedImageAssets,\n              videos: convertedVideoAssets\n            };\n            post.editPost(data).then(function (res) {\n              console.log(res.data);\n            }).catch(function (error) {\n              console.log(\"Failed\");\n              console.log(error.response.data);\n            });\n            dispatch(mediaActions.resetState());\n            navigation.navigate(\"MainScreen\");\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var convertToBase64 = function convertToBase64(assets) {\n    var mimeTypes, assetPromises, convertedAssets, base64Assets;\n    return _regeneratorRuntime.async(function convertToBase64$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            mimeTypes = assets.map(function (asset) {\n              var fileName = asset.filename;\n              var mediaType = asset.mediaType === 'photo' ? 'image' : 'video';\n              var extension = fileName.split('.')[1];\n\n              if (extension === 'jpg') {\n                extension = 'jpeg';\n              }\n\n              return mediaType + \"/\" + extension;\n            });\n            assetPromises = assets.map(function (asset) {\n              return FileSystem.readAsStringAsync(asset.uri, {\n                encoding: FileSystem.EncodingType.Base64\n              });\n            });\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Promise.all(assetPromises));\n\n          case 4:\n            convertedAssets = _context2.sent;\n            base64Assets = convertedAssets.map(function (asset, idx) {\n              return formatIntoBase64String(asset, mimeTypes[idx]);\n            });\n            return _context2.abrupt(\"return\", base64Assets);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var formatIntoBase64String = function formatIntoBase64String(data, mediaType) {\n    return \"data:\" + mediaType + \";base64,\" + data;\n  };\n\n  var addImage = function addImage() {\n    navigation.navigate(\"MediaPicker\");\n  };\n\n  var handleRemoveAsset = function handleRemoveAsset(asset) {\n    dispatch(mediaActions.removeAsset(asset));\n  };\n\n  var goBack = function goBack() {\n    dispatch(mediaActions.resetState());\n    navigation.navigate(\"MainScreen\");\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headerBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.headerLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, React.createElement(BackButton, {\n    goBack: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.headerRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"\\u0110\\u0103ng\",\n    style: styles.upload,\n    onPress: editUpLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }))), React.createElement(Text, {\n    style: styles.tus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Ch\\u1EC9nh s\\u1EEDa b\\xE0i vi\\u1EBFt\"), React.createElement(TextInput, {\n    style: styles.status,\n    returnKeyType: \"next\",\n    defaultValue: toggleItem.described,\n    onChangeText: setStatus,\n    multiline: true,\n    numberOfLines: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }), React.createElement(Icon, {\n    name: \"image\",\n    type: \"MaterialIcons\",\n    size: 40,\n    color: theme.colors.button,\n    onPress: addImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    numColumns: 3,\n    data: selectedAssets,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }\n      }, React.createElement(ImageBackground, {\n        source: {\n          uri: item.uri\n        },\n        style: styles.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, React.createElement(Icon, {\n        name: \"close\",\n        type: \"ant-design\",\n        size: 16,\n        iconStyle: styles.removeIcon,\n        onPress: function onPress() {\n          return handleRemoveAsset(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  upload: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginLeft: 20\n  },\n  tus: {\n    color: \"black\",\n    fontSize: 25,\n    paddingTop: 17,\n    textAlign: \"center\"\n  },\n  status: {\n    margin: 7,\n    fontSize: 20,\n    borderRadius: 6\n  },\n  button: {\n    backgroundColor: theme.colors.button\n  },\n  image: {\n    width: 115,\n    height: 115,\n    margin: 2,\n    borderRadius: 7\n  },\n  headerBar: {\n    height: 40,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.white\n  },\n  headerLeft: {\n    flex: 1\n  },\n  headerRight: {\n    marginRight: 10\n  },\n  removeIcon: {\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    alignSelf: 'flex-end'\n  }\n});","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/screen/EditPostScreen.js"],"names":["React","useState","useEffect","Text","theme","Icon","useSelector","useDispatch","mediaActions","FileSystem","BackButton","TextInput","post","token","EditPostScreen","route","navigation","status","setStatus","toggleItem","params","dispatch","index","images","length","uri","base64","id","_id","addAsset","console","log","selectedAssets","state","media","editUpLoad","imageAssets","filter","asset","mediaType","videoAssets","convertToBase64","convertedImageAssets","convertedVideoAssets","data","postId","described","videos","editPost","then","res","catch","error","response","resetState","navigate","assets","mimeTypes","map","fileName","filename","extension","split","assetPromises","readAsStringAsync","encoding","EncodingType","Base64","Promise","all","convertedAssets","base64Assets","idx","formatIntoBase64String","addImage","handleRemoveAsset","removeAsset","goBack","flex","styles","headerBar","headerLeft","headerRight","upload","tus","colors","button","item","toString","image","removeIcon","StyleSheet","create","fontSize","fontWeight","marginLeft","color","paddingTop","textAlign","margin","borderRadius","backgroundColor","width","height","flexDirection","alignItems","white","marginRight","alignSelf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, View, FlatList, Image, Button, TouchableOpacity, ImageBackground  } from 'react-native'\r\nimport { Text } from 'react-native-paper'\r\nimport { theme } from '../components/core/theme'\r\nimport { Icon } from 'react-native-elements'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { mediaActions } from '../redux/actions';\r\nimport * as FileSystem from 'expo-file-system';\r\n\r\n\r\nimport {\r\n  BackButton,\r\n  TextInput\r\n} from '../components'\r\n\r\nimport {post} from \"../handle_api\";\r\nimport {token} from \"../handle_api/token\"\r\n\r\nexport default function EditPostScreen({ route, navigation }) {\r\n  const [status, setStatus] = useState(\"\")\r\n  const {toggleItem} = route.params;\r\n  const dispatch = useDispatch();\r\n \r\n  \r\n \r\n  \r\n  useEffect(() => {\r\n    \r\n    for (let index = 0; index < toggleItem.images.length; index++){\r\n      const images = {}\r\n      // console.log(toggleItem.images[index].base64);\r\n      images.uri = `data:image/jpeg;base64,${toggleItem.images[index].base64}`\r\n      images.id = toggleItem.images[index]._id;\r\n      dispatch(mediaActions.addAsset(images));\r\n    }\r\n    console.log(\"Done\");\r\n  \r\n  }, []);\r\n  const selectedAssets = useSelector(state => state.media.selectedAssets);\r\n\r\n  const editUpLoad = async () => {\r\n\r\n    const imageAssets = selectedAssets.filter(asset => asset.mediaType === 'photo');\r\n    const videoAssets = selectedAssets.filter(asset => asset.mediaType === 'video');\r\n    \r\n    const convertedImageAssets = await convertToBase64(imageAssets);\r\n    const convertedVideoAssets = await convertToBase64(videoAssets);\r\n    \r\n    const data = {\r\n      token: token,\r\n      postId: toggleItem._id,\r\n      described: status,\r\n      images: convertedImageAssets,\r\n      videos: convertedVideoAssets\r\n    }\r\n  \r\n\r\n    post.editPost(data)\r\n      .then(res => {\r\n        console.log(res.data);\r\n        // console.log(data.images)\r\n      })\r\n        .catch(error => {\r\n          console.log(\"Failed\");\r\n          console.log(error.response.data);\r\n      })\r\n  dispatch(mediaActions.resetState());\r\n\r\n  navigation.navigate(\"MainScreen\");\r\n\r\n  }\r\n\r\n\r\n  const convertToBase64 = async (assets) => {\r\n    const mimeTypes = assets.map(asset => {\r\n        const fileName = asset.filename;\r\n        const mediaType = asset.mediaType === 'photo' ? 'image' : 'video';\r\n        let extension = fileName.split('.')[1];\r\n        if (extension === 'jpg') {\r\n            extension = 'jpeg';\r\n        }\r\n\r\n        return `${mediaType}/${extension}`;\r\n    });\r\n\r\n    const assetPromises = assets.map(asset => FileSystem.readAsStringAsync(asset.uri, { encoding: FileSystem.EncodingType.Base64 }));\r\n    const convertedAssets = await Promise.all(assetPromises);\r\n\r\n    const base64Assets = convertedAssets.map((asset, idx) => formatIntoBase64String(asset, mimeTypes[idx]));\r\n    return base64Assets;\r\n}\r\n\r\nconst formatIntoBase64String = (data, mediaType) => {\r\n    return `data:${mediaType};base64,${data}`;\r\n}\r\n\r\n\r\n\r\n  const addImage = () => {\r\n    navigation.navigate(\"MediaPicker\");\r\n  }\r\n\r\n  const handleRemoveAsset = (asset) => {\r\n    dispatch(mediaActions.removeAsset(asset));\r\n  }\r\n  const goBack = () => {\r\n    dispatch(mediaActions.resetState());\r\n    navigation.navigate(\"MainScreen\");\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <View style={styles.headerBar}>\r\n        <View style={styles.headerLeft}>\r\n          <BackButton goBack={goBack} />\r\n        </View>\r\n        <View style={styles.headerRight}>\r\n          {/* <Text style={styles.dang}>Đăng</Text> */}\r\n          <Button title=\"Đăng\" style={styles.upload}\r\n          onPress={editUpLoad}\r\n          />\r\n        </View>\r\n      </View>\r\n      <Text style={styles.tus}>Chỉnh sửa bài viết</Text>\r\n      <TextInput style={styles.status}\r\n        returnKeyType=\"next\"\r\n        defaultValue={toggleItem.described}\r\n        // value={itemPost.described}\r\n        onChangeText={setStatus}\r\n        multiline={true}\r\n        numberOfLines={5}\r\n      />\r\n      <Icon name=\"image\" type=\"MaterialIcons\" size={40} color={theme.colors.button} onPress={addImage} />\r\n      {/* Render Image from Gallery */}\r\n\r\n      <View style={{ flex: 1 }}>\r\n        <FlatList\r\n          numColumns={3}\r\n          data={selectedAssets}\r\n          keyExtractor={(item) => item.id.toString()}\r\n          renderItem={({ item }) => (\r\n              <View>\r\n              {/* <TouchableOpacity>\r\n              <Image style={styles.image} source={{uri: item.uri}} />\r\n              </TouchableOpacity> */}\r\n              <ImageBackground \r\n                source={{uri: item.uri}}\r\n                style={styles.image}\r\n              >\r\n                <Icon \r\n                    name='close' \r\n                    type='ant-design' \r\n                    size={16} \r\n                    iconStyle={styles.removeIcon}\r\n                    onPress={() => handleRemoveAsset(item)}\r\n                />\r\n              </ImageBackground>\r\n              </View>\r\n          )\r\n        }/>\r\n      </View>\r\n        \r\n    </View >\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  upload:{\r\n   fontSize: 40,\r\n   fontWeight: 'bold',\r\n   marginLeft: 20\r\n  },\r\n  tus: {\r\n    color: \"black\",\r\n    fontSize: 25,\r\n    paddingTop: 17,\r\n    textAlign: \"center\",\r\n  },\r\n  status: {\r\n    margin: 7,\r\n    fontSize: 20,\r\n    borderRadius: 6,\r\n  },\r\n  button: {\r\n    backgroundColor: theme.colors.button\r\n  },\r\n  image: {\r\n    width: 115,\r\n    height: 115,\r\n    // resizeMode: 'center',\r\n    margin: 2,\r\n    borderRadius: 7,\r\n  },\r\n  headerBar: {\r\n    height: 40,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: theme.colors.white,\r\n  },\r\n\r\n  headerLeft: {\r\n    flex: 1,\r\n  },\r\n  headerRight: {\r\n    // justifyContent: 'flex-end',\r\n    // flexDirection: 'row',\r\n    marginRight: 10\r\n  },\r\n  removeIcon: {\r\n    backgroundColor: '#fff', \r\n    borderRadius: 10, \r\n    alignSelf: 'flex-end'\r\n  },\r\n})"]},"metadata":{},"sourceType":"module"}