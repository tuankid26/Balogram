{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\n\nvar getLayoutValue = function getLayoutValue(key) {\n  return function (event) {\n    var _event$nativeEvent$la, _event$nativeEvent, _event$nativeEvent$la2;\n\n    return (_event$nativeEvent$la = event == null ? void 0 : (_event$nativeEvent = event.nativeEvent) == null ? void 0 : (_event$nativeEvent$la2 = _event$nativeEvent.layout) == null ? void 0 : _event$nativeEvent$la2[key]) != null ? _event$nativeEvent$la : 0;\n  };\n};\n\nexport function useViewDimensions() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$heightOffset = _ref.heightOffset,\n      heightOffset = _ref$heightOffset === void 0 ? 0 : _ref$heightOffset,\n      _ref$widthOffset = _ref.widthOffset,\n      widthOffset = _ref$widthOffset === void 0 ? 0 : _ref$widthOffset;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      height = _React$useState2[0],\n      setHeight = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      width = _React$useState4[0],\n      setWidth = _React$useState4[1];\n\n  var computeViewDimensions = React.useCallback(function (event) {\n    var h = getLayoutValue('height')(event);\n    var w = getLayoutValue('width')(event);\n    setHeight(h + heightOffset);\n    setWidth(w + widthOffset);\n  }, [heightOffset, widthOffset]);\n  return {\n    computeViewDimensions: computeViewDimensions,\n    height: height,\n    width: width\n  };\n}","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/node_modules/react-native-toast-message/lib/src/hooks/useViewDimensions.js"],"names":["React","getLayoutValue","key","event","nativeEvent","layout","useViewDimensions","heightOffset","widthOffset","useState","height","setHeight","width","setWidth","computeViewDimensions","useCallback","h","w"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;AAAA,SAAS,UAACC,KAAD;AAAA;;AAAA,oCAAWA,KAAX,0CAAWA,KAAK,CAAEC,WAAlB,+CAAW,mBAAoBC,MAA/B,qBAAW,uBAA6BH,GAA7B,CAAX,oCAAgD,CAAhD;AAAA,GAAT;AAAA,CAAvB;;AAIA,OAAO,SAASI,iBAAT,GAAuE;AAAA,iFAAJ,EAAI;AAAA,+BAA1CC,YAA0C;AAAA,MAA1CA,YAA0C,kCAA3B,CAA2B;AAAA,8BAAxBC,WAAwB;AAAA,MAAxBA,WAAwB,iCAAV,CAAU;;AAC1E,wBAA4BR,KAAK,CAACS,QAAN,CAAe,CAAf,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,yBAA0BX,KAAK,CAACS,QAAN,CAAe,CAAf,CAA1B;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,qBAAqB,GAAGd,KAAK,CAACe,WAAN,CAAkB,UAACZ,KAAD,EAAW;AACvD,QAAMa,CAAC,GAAGf,cAAc,CAAC,QAAD,CAAd,CAAyBE,KAAzB,CAAV;AACA,QAAMc,CAAC,GAAGhB,cAAc,CAAC,OAAD,CAAd,CAAwBE,KAAxB,CAAV;AACAQ,IAAAA,SAAS,CAACK,CAAC,GAAGT,YAAL,CAAT;AACAM,IAAAA,QAAQ,CAACI,CAAC,GAAGT,WAAL,CAAR;AACH,GAL6B,EAK3B,CAACD,YAAD,EAAeC,WAAf,CAL2B,CAA9B;AAMA,SAAO;AACHM,IAAAA,qBAAqB,EAArBA,qBADG;AAEHJ,IAAAA,MAAM,EAANA,MAFG;AAGHE,IAAAA,KAAK,EAALA;AAHG,GAAP;AAKH","sourcesContent":["import React from 'react';\nconst getLayoutValue = (key) => (event) => event?.nativeEvent?.layout?.[key] ?? 0;\n/**\n * Retrieves View dimensions (height, width) from a LayoutChangeEvent and sets them on state\n */\nexport function useViewDimensions({ heightOffset = 0, widthOffset = 0 } = {}) {\n    const [height, setHeight] = React.useState(0);\n    const [width, setWidth] = React.useState(0);\n    const computeViewDimensions = React.useCallback((event) => {\n        const h = getLayoutValue('height')(event);\n        const w = getLayoutValue('width')(event);\n        setHeight(h + heightOffset);\n        setWidth(w + widthOffset);\n    }, [heightOffset, widthOffset]);\n    return {\n        computeViewDimensions,\n        height,\n        width\n    };\n}\n"]},"metadata":{},"sourceType":"module"}