{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar initialState = {\n  uploading: false,\n  uploadSuccess: false,\n  err: null\n};\nexport default uploadReducer = function uploadReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'UPLOADING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploading: true\n      });\n\n    case 'UPLOAD_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploading: false,\n        uploadSuccess: true\n      });\n\n    case 'UPLOAD_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploading: false,\n        err: action.payload\n      });\n\n    case 'RESET':\n      return initialState;\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/redux/reducers/uploadReducer.js"],"names":["initialState","uploading","uploadSuccess","err","uploadReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,IAAMA,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,KADM;AAEjBC,EAAAA,aAAa,EAAE,KAFE;AAGjBC,EAAAA,GAAG,EAAE;AAHY,CAArB;AAOA,eAAeC,aAAa,GAAG,yBAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,6CACOF,KADP;AAEIJ,QAAAA,SAAS,EAAE;AAFf;;AAKJ,SAAK,gBAAL;AACI,6CACOI,KADP;AAEIJ,QAAAA,SAAS,EAAE,KAFf;AAGIC,QAAAA,aAAa,EAAE;AAHnB;;AAMJ,SAAK,gBAAL;AACI,6CACOG,KADP;AAEIJ,QAAAA,SAAS,EAAE,KAFf;AAGIE,QAAAA,GAAG,EAAEG,MAAM,CAACE;AAHhB;;AAMJ,SAAK,OAAL;AACI,aAAOR,YAAP;;AAEJ;AACI,aAAOK,KAAP;AAzBR;AA2BH,CA5BD","sourcesContent":["const initialState = {\r\n    uploading: false,\r\n    uploadSuccess: false,\r\n    err: null,\r\n};\r\n\r\n\r\nexport default uploadReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'UPLOADING':\r\n            return {\r\n                ...state,\r\n                uploading: true\r\n            };\r\n\r\n        case 'UPLOAD_SUCCESS':\r\n            return {\r\n                ...state,\r\n                uploading: false,\r\n                uploadSuccess: true\r\n            };\r\n\r\n        case 'UPLOAD_FAILURE':\r\n            return {\r\n                ...state,\r\n                uploading: false,\r\n                err: action.payload\r\n            };\r\n\r\n        case 'RESET':\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}