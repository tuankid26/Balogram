{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VietAnh\\\\Balogram\\\\node_modules\\\\react-native-toast-message\\\\lib\\\\src\\\\contexts\\\\LoggerContext.js\";\nimport React from 'react';\nimport { noop } from \"../utils/func\";\nvar LoggerContext = React.createContext({\n  log: noop\n});\n\nfunction LoggerProvider(_ref) {\n  var children = _ref.children,\n      _ref$enableLogs = _ref.enableLogs,\n      enableLogs = _ref$enableLogs === void 0 ? false : _ref$enableLogs;\n  var log = React.useCallback(function () {\n    if (enableLogs) {\n      var _console;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      (_console = console).log.apply(_console, ['Toast:'].concat(args));\n    }\n  }, [enableLogs]);\n  var value = {\n    log: log\n  };\n  return React.createElement(LoggerContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, children);\n}\n\nfunction useLogger() {\n  var ctx = React.useContext(LoggerContext);\n  return ctx;\n}\n\nexport { LoggerProvider, useLogger };","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/node_modules/react-native-toast-message/lib/src/contexts/LoggerContext.js"],"names":["React","noop","LoggerContext","createContext","log","LoggerProvider","children","enableLogs","useCallback","args","console","value","useLogger","ctx","useContext"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT;AACA,IAAMC,aAAa,GAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,GAAG,EAAEH;AADiC,CAApB,CAAtB;;AAGA,SAASI,cAAT,OAA0D;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,6BAAtBC,UAAsB;AAAA,MAAtBA,UAAsB,gCAAT,KAAS;AACtD,MAAMH,GAAG,GAAGJ,KAAK,CAACQ,WAAN,CAAkB,YAAa;AACvC,QAAID,UAAJ,EAAgB;AAAA;;AAAA,wCADcE,IACd;AADcA,QAAAA,IACd;AAAA;;AAEZ,kBAAAC,OAAO,EAACN,GAAR,kBAAY,QAAZ,SAAyBK,IAAzB;AACH;AACJ,GALW,EAKT,CAACF,UAAD,CALS,CAAZ;AAMA,MAAMI,KAAK,GAAG;AACVP,IAAAA,GAAG,EAAHA;AADU,GAAd;AAGA,SAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEO,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCL,QAAvC,CAAR;AACH;;AACD,SAASM,SAAT,GAAqB;AACjB,MAAMC,GAAG,GAAGb,KAAK,CAACc,UAAN,CAAiBZ,aAAjB,CAAZ;AACA,SAAOW,GAAP;AACH;;AACD,SAASR,cAAT,EAAyBO,SAAzB","sourcesContent":["import React from 'react';\nimport { noop } from '../utils/func';\nconst LoggerContext = React.createContext({\n    log: noop\n});\nfunction LoggerProvider({ children, enableLogs = false }) {\n    const log = React.useCallback((...args) => {\n        if (enableLogs) {\n            // eslint-disable-next-line no-console\n            console.log('Toast:', ...args);\n        }\n    }, [enableLogs]);\n    const value = {\n        log\n    };\n    return (<LoggerContext.Provider value={value}>{children}</LoggerContext.Provider>);\n}\nfunction useLogger() {\n    const ctx = React.useContext(LoggerContext);\n    return ctx;\n}\nexport { LoggerProvider, useLogger };\n"]},"metadata":{},"sourceType":"module"}