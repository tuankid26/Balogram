{"ast":null,"code":"import { FlipType } from \"../ImageManipulator.types\";\nimport { getContext } from \"../utils/getContext.web\";\nexport default (function (canvas, flip) {\n  var xFlip = flip === FlipType.Horizontal;\n  var yFlip = flip === FlipType.Vertical;\n  var result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n  var context = getContext(result);\n  context.translate(canvas.width / 2, canvas.height / 2);\n  var xScale = xFlip ? -1 : 1;\n  var yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n  return result;\n});","map":{"version":3,"sources":["../../src/actions/FlipAction.web.ts"],"names":[],"mappings":"AAAA,SAAqB,QAArB;AACA,SAAS,UAAT;AAEA,gBAAe,UAAC,MAAD,EAA4B,IAA5B,EAAwD;AACrE,MAAM,KAAK,GAAG,IAAI,KAAK,QAAQ,CAAC,UAAhC;AACA,MAAM,KAAK,GAAG,IAAI,KAAK,QAAQ,CAAC,QAAhC;AAEA,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,KAAtB;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,MAAvB;AAEA,MAAM,OAAO,GAAG,UAAU,CAAC,MAAD,CAA1B;AAGA,EAAA,OAAO,CAAC,SAAR,CAAkB,MAAM,CAAC,KAAP,GAAe,CAAjC,EAAoC,MAAM,CAAC,MAAP,GAAgB,CAApD;AAGA,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAA5B;AACA,MAAM,MAAM,GAAG,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAA5B;AACA,EAAA,OAAO,CAAC,KAAR,CAAc,MAAd,EAAsB,MAAtB;AAGA,EAAA,OAAO,CAAC,SAAR,CAAkB,MAAlB,EAA0B,CAAC,MAAM,CAAC,KAAR,GAAgB,CAA1C,EAA6C,CAAC,MAAM,CAAC,MAAR,GAAiB,CAA9D,EAAiE,MAAM,CAAC,KAAxE,EAA+E,MAAM,CAAC,MAAtF;AAEA,SAAO,MAAP;AACD,CAtBD","sourcesContent":["import { ActionFlip, FlipType } from '../ImageManipulator.types';\nimport { getContext } from '../utils/getContext.web';\n\nexport default (canvas: HTMLCanvasElement, flip: ActionFlip['flip']) => {\n  const xFlip = flip === FlipType.Horizontal;\n  const yFlip = flip === FlipType.Vertical;\n\n  const result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n\n  const context = getContext(result);\n\n  // Set the origin to the center of the image\n  context.translate(canvas.width / 2, canvas.height / 2);\n\n  // Flip/flop the canvas\n  const xScale = xFlip ? -1 : 1;\n  const yScale = yFlip ? -1 : 1;\n  context.scale(xScale, yScale);\n\n  // Draw the image\n  context.drawImage(canvas, -canvas.width / 2, -canvas.height / 2, canvas.width, canvas.height);\n\n  return result;\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}