{"ast":null,"code":"import React from 'react';\nimport { useLogger } from \"../contexts\";\n\nfunction useTimeout(cb) {\n  var delayMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  var _useLogger = useLogger(),\n      log = _useLogger.log;\n\n  var ref = React.useRef();\n  var clearTimer = React.useCallback(function () {\n    if (ref.current) {\n      log('Clearing timer', ref.current);\n      clearTimeout(ref.current);\n      ref.current = undefined;\n    }\n  }, [log]);\n  var startTimer = React.useCallback(function () {\n    clearTimer();\n    ref.current = setTimeout(function () {\n      cb();\n      log('Running timer', ref.current);\n      ref.current = undefined;\n    }, delayMs);\n    log('Starting timer', ref.current);\n  }, [clearTimer, delayMs, log, cb]);\n  React.useEffect(function () {\n    return function () {\n      return clearTimer();\n    };\n  }, [clearTimer]);\n  return {\n    startTimer: startTimer,\n    clearTimer: clearTimer,\n    isActive: ref.current !== undefined\n  };\n}\n\nexport { useTimeout };","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/node_modules/react-native-toast-message/lib/src/hooks/useTimeout.js"],"names":["React","useLogger","useTimeout","cb","delayMs","log","ref","useRef","clearTimer","useCallback","current","clearTimeout","undefined","startTimer","setTimeout","useEffect","isActive"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT;;AACA,SAASC,UAAT,CAAoBC,EAApB,EAAqC;AAAA,MAAbC,OAAa,uEAAH,CAAG;;AACjC,mBAAgBH,SAAS,EAAzB;AAAA,MAAQI,GAAR,cAAQA,GAAR;;AACA,MAAMC,GAAG,GAAGN,KAAK,CAACO,MAAN,EAAZ;AACA,MAAMC,UAAU,GAAGR,KAAK,CAACS,WAAN,CAAkB,YAAM;AACvC,QAAIH,GAAG,CAACI,OAAR,EAAiB;AACbL,MAAAA,GAAG,CAAC,gBAAD,EAAmBC,GAAG,CAACI,OAAvB,CAAH;AACAC,MAAAA,YAAY,CAACL,GAAG,CAACI,OAAL,CAAZ;AACAJ,MAAAA,GAAG,CAACI,OAAJ,GAAcE,SAAd;AACH;AACJ,GANkB,EAMhB,CAACP,GAAD,CANgB,CAAnB;AAOA,MAAMQ,UAAU,GAAGb,KAAK,CAACS,WAAN,CAAkB,YAAM;AACvCD,IAAAA,UAAU;AACVF,IAAAA,GAAG,CAACI,OAAJ,GAAcI,UAAU,CAAC,YAAM;AAC3BX,MAAAA,EAAE;AACFE,MAAAA,GAAG,CAAC,eAAD,EAAkBC,GAAG,CAACI,OAAtB,CAAH;AACAJ,MAAAA,GAAG,CAACI,OAAJ,GAAcE,SAAd;AACH,KAJuB,EAIrBR,OAJqB,CAAxB;AAKAC,IAAAA,GAAG,CAAC,gBAAD,EAAmBC,GAAG,CAACI,OAAvB,CAAH;AACH,GARkB,EAQhB,CAACF,UAAD,EAAaJ,OAAb,EAAsBC,GAAtB,EAA2BF,EAA3B,CARgB,CAAnB;AASAH,EAAAA,KAAK,CAACe,SAAN,CAAgB;AAAA,WAAM;AAAA,aAAMP,UAAU,EAAhB;AAAA,KAAN;AAAA,GAAhB,EAA0C,CAACA,UAAD,CAA1C;AACA,SAAO;AACHK,IAAAA,UAAU,EAAVA,UADG;AAEHL,IAAAA,UAAU,EAAVA,UAFG;AAGHQ,IAAAA,QAAQ,EAAEV,GAAG,CAACI,OAAJ,KAAgBE;AAHvB,GAAP;AAKH;;AACD,SAASV,UAAT","sourcesContent":["import React from 'react';\nimport { useLogger } from '../contexts';\nfunction useTimeout(cb, delayMs = 0) {\n    const { log } = useLogger();\n    const ref = React.useRef();\n    const clearTimer = React.useCallback(() => {\n        if (ref.current) {\n            log('Clearing timer', ref.current);\n            clearTimeout(ref.current);\n            ref.current = undefined;\n        }\n    }, [log]);\n    const startTimer = React.useCallback(() => {\n        clearTimer();\n        ref.current = setTimeout(() => {\n            cb();\n            log('Running timer', ref.current);\n            ref.current = undefined;\n        }, delayMs);\n        log('Starting timer', ref.current);\n    }, [clearTimer, delayMs, log, cb]);\n    React.useEffect(() => () => clearTimer(), [clearTimer]);\n    return {\n        startTimer,\n        clearTimer,\n        isActive: ref.current !== undefined\n    };\n}\nexport { useTimeout };\n"]},"metadata":{},"sourceType":"module"}