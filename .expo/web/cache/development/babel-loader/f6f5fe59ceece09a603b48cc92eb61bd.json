{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"config\"];\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\VietAnh\\\\Balogram\\\\node_modules\\\\react-native-toast-message\\\\lib\\\\src\\\\Toast.js\";\n\nimport React from 'react';\nimport { LoggerProvider } from \"./contexts\";\nimport { ToastUI } from \"./ToastUI\";\nimport { useToast } from \"./useToast\";\nvar ToastRoot = React.forwardRef(function (props, ref) {\n  var config = props.config,\n      defaultOptions = _objectWithoutProperties(props, _excluded);\n\n  var _useToast = useToast({\n    defaultOptions: defaultOptions\n  }),\n      show = _useToast.show,\n      hide = _useToast.hide,\n      isVisible = _useToast.isVisible,\n      options = _useToast.options,\n      data = _useToast.data;\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      show: show,\n      hide: hide\n    };\n  });\n  return React.createElement(ToastUI, {\n    isVisible: isVisible,\n    options: options,\n    data: data,\n    hide: hide,\n    show: show,\n    config: config,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  });\n});\nvar toastRef = React.createRef();\nexport function Toast(props) {\n  return React.createElement(LoggerProvider, {\n    enableLogs: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, React.createElement(ToastRoot, _extends({\n    ref: toastRef\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })));\n}\n\nToast.show = function (params) {\n  var _toastRef$current;\n\n  (_toastRef$current = toastRef.current) == null ? void 0 : _toastRef$current.show(params);\n};\n\nToast.hide = function (params) {\n  var _toastRef$current2;\n\n  (_toastRef$current2 = toastRef.current) == null ? void 0 : _toastRef$current2.hide(params);\n};","map":{"version":3,"sources":["C:/Users/VietAnh/Balogram/node_modules/react-native-toast-message/lib/src/Toast.js"],"names":["React","LoggerProvider","ToastUI","useToast","ToastRoot","forwardRef","props","ref","config","defaultOptions","show","hide","isVisible","options","data","useImperativeHandle","toastRef","createRef","Toast","params","current"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AACA,IAAMC,SAAS,GAAGJ,KAAK,CAACK,UAAN,CAAiB,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/C,MAAQC,MAAR,GAAsCF,KAAtC,CAAQE,MAAR;AAAA,MAAmBC,cAAnB,4BAAsCH,KAAtC;;AACA,kBAAiDH,QAAQ,CAAC;AACtDM,IAAAA,cAAc,EAAdA;AADsD,GAAD,CAAzD;AAAA,MAAQC,IAAR,aAAQA,IAAR;AAAA,MAAcC,IAAd,aAAcA,IAAd;AAAA,MAAoBC,SAApB,aAAoBA,SAApB;AAAA,MAA+BC,OAA/B,aAA+BA,OAA/B;AAAA,MAAwCC,IAAxC,aAAwCA,IAAxC;;AAGAd,EAAAA,KAAK,CAACe,mBAAN,CAA0BR,GAA1B,EAA+B;AAAA,WAAO;AAClCG,MAAAA,IAAI,EAAJA,IADkC;AAElCC,MAAAA,IAAI,EAAJA;AAFkC,KAAP;AAAA,GAA/B;AAIA,SAAQ,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEC,SAApB;AAA+B,IAAA,OAAO,EAAEC,OAAxC;AAAiD,IAAA,IAAI,EAAEC,IAAvD;AAA6D,IAAA,IAAI,EAAEH,IAAnE;AAAyE,IAAA,IAAI,EAAED,IAA/E;AAAqF,IAAA,MAAM,EAAEF,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR;AACH,CAViB,CAAlB;AAWA,IAAMQ,QAAQ,GAAGhB,KAAK,CAACiB,SAAN,EAAjB;AACA,OAAO,SAASC,KAAT,CAAeZ,KAAf,EAAsB;AACzB,SAAQ,oBAAC,cAAD;AAAgB,IAAA,UAAU,EAAE,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEU;AAAhB,KAA8BV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADM,CAAR;AAGH;;AACDY,KAAK,CAACR,IAAN,GAAa,UAACS,MAAD,EAAY;AAAA;;AACrB,uBAAAH,QAAQ,CAACI,OAAT,uCAAkBV,IAAlB,CAAuBS,MAAvB;AACH,CAFD;;AAGAD,KAAK,CAACP,IAAN,GAAa,UAACQ,MAAD,EAAY;AAAA;;AACrB,wBAAAH,QAAQ,CAACI,OAAT,wCAAkBT,IAAlB,CAAuBQ,MAAvB;AACH,CAFD","sourcesContent":["import React from 'react';\nimport { LoggerProvider } from './contexts';\nimport { ToastUI } from './ToastUI';\nimport { useToast } from './useToast';\nconst ToastRoot = React.forwardRef((props, ref) => {\n    const { config, ...defaultOptions } = props;\n    const { show, hide, isVisible, options, data } = useToast({\n        defaultOptions\n    });\n    React.useImperativeHandle(ref, () => ({\n        show,\n        hide\n    }));\n    return (<ToastUI isVisible={isVisible} options={options} data={data} hide={hide} show={show} config={config}/>);\n});\nconst toastRef = React.createRef();\nexport function Toast(props) {\n    return (<LoggerProvider enableLogs={false}>\n      <ToastRoot ref={toastRef} {...props}/>\n    </LoggerProvider>);\n}\nToast.show = (params) => {\n    toastRef.current?.show(params);\n};\nToast.hide = (params) => {\n    toastRef.current?.hide(params);\n};\n"]},"metadata":{},"sourceType":"module"}